<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.WebAuthenticationDetails"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.WebAuthenticationDetailsSource"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.security.JwtAuthenticationEntryPoint"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.security.JwtAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.payload.JwtAuthReponse"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.security.JwtTokenProvider"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.payload.JwtAuthResponse"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Table"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.AssertFalse.List"/>
    <fullyQualifiedTypeName name="jakarta.persistence.OneToMany"/>
    <fullyQualifiedTypeName name="jakarta.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="org.hibernate.type.TrueFalseConverter"/>
    <fullyQualifiedTypeName name="jakarta.persistence.ManyToOne"/>
    <fullyQualifiedTypeName name="jakarta.persistence.FetchType"/>
    <fullyQualifiedTypeName name="jakarta.persistence.JoinColumn"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.service.CategoryService"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.payload.CategoryDto"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="java.lang.Long"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.repository.CategoryRepository"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.model.Post"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.model.Category"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.springboot.blogapp.payload.PostDto"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.OpenAPIDefinition"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.info.Info"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.info.Contact"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.info.License"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.ExternalDocumentation"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.security.SecuritySchemes"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.security.SecurityScheme"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.enums.SecuritySchemeType"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.security.SecurityRequirement"/>
</qualifiedTypeNameHistroy>
